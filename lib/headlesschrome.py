#!/usr/bin/python3 
import time
import os
import json
import constants
from selenium import webdriver
from selenium.webdriver.chrome.options import Options

'''
Class headlesschrome

Functions:
        get_page - attempts to browse to a page and returns a chrome driver object
        get_cookies - prints the cookies that are set in browsing the page
        get_pagetitle - returns the content of the HTML <title></title> tag
        get_pagesource - returns the HTML source of the page
        get_currenturl - returns the URL of the page visited, this can vary from the original URL if the page has been redirected.
        get_logdriver - returns the logs that have been generated by the driver
        get_logbrowser - returns the browser logs generated by the driver
        get_filedownload - a work in progress, requires setting parameters within the chrome configuration to allow for files to be downloaded.
'''
class headlesschrome(object):
        def __init__(self, url, mobile=False):
                self.chromedriver = constants.CHROMEDRIVERPATH 
                if not url.startswith('http'):
                        raise Exception('URLs need to start with "http"')
                else:
                        self.url = url
                self.mobile = mobile
                if mobile is True:
                        self.chromeoptions = self.set_mobilechromeoptions()
                else:
                        self.chromeoptions = self.set_desktopchromeoptions()
                self.page = self.get_page()

        '''
        Set Functions
        '''
        def set_desktopchromeoptions(self):
                chromeoptions = Options()
                chromeoptions.add_argument("--headless")
                chromeoptions.add_argument("--window-size=1920x1080")
                chromeoptions.add_argument(constants.DESKTOPUSERAGENT)
                return chromeoptions

        def set_mobilechromeoptions(self):
                chromeoptions = Options()
                chromeoptions.add_argument("--headless")
                chromeoptions.add_argument("--window-size=2960x1440")
                chromeoptions.add_argument(constants.MOBILEUSERAGENT)
                return chromeoptions

        def set_closesession(self):
                self.page.close

        '''
        Get Functions
        '''
        def get_page(self):
                try:
                        driver = webdriver.Chrome(chrome_options=self.chromeoptions, executable_path=self.chromedriver)
                        driver.get(self.url)
                        return driver
                except FileNotFoundError:
                        sys.exit(1)
                #return driver

        def get_cookies(self):
                return self.page.get_cookies()

        def get_pagetitle(self):
                return self.page.title

        def get_pagesource(self):
                return self.page_source

        def get_pagescreenshot(self):
                if self.mobile is True:
                        screenshotname = 'Mobile_URL_Screenshot.png'
                else:
                        screenshotname = 'Desktop_URL_Screenshot.png'
                self.page.get_screenshot_as_file(screenshotname)

        def get_currenturl(self):
                return self.page.currentl_url

        def get_logdriver(self):
                return self.page.get_log('driver')
        
        def get_logbrowser(self):
                return self.page.get_log('browser')

        def get_filedownload(self):
                pass










